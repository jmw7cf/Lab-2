#include <stdlib.h>
#include <math.h>
#include <stdio.h>
#include <time.h>

void print_array(int* array, int length);
void bubble_sort(int length, int* array);
void find_number(int* array, int length, int number);
void write_to_file(char* filename, int* array, int length);
int mode(int* array, int length);

int main(int argc, char* argv[])
{
        int arraySize;
        if (argc != 2)
        {
                printf("incorrect usage\ncorrect usage: ./a.out <outputfile>");
                return 0;
        }

                printf("Please choose the amount of numbers you would like in the array (1-100):\n");
                scanf("%d", &arraySize);

        while(arraySize<=0 || arraySize>100)
        {
                printf("Please choose the amount of numbers you would like in the array (1-100):\n");
                scanf("%d\n", &arraySize);
        }
                srand(time(NULL));

        int i;
        int* arrayPtr=malloc(arraySize*(sizeof(int)));
                for(i=0; i<arraySize; i++)
                {
                        arrayPtr[i]=rand()%100;
                }

                print_array(arrayPtr, arraySize);
                        printf("\nArray sorted\n"); //showing the difference in the sorted array
                bubble_sort(arraySize, arrayPtr);
                print_array(arrayPtr, arraySize);
int modeVal=mode(array, arraySize);
        printf("The mode is %d\n", modeVal);

        int userInput;
                printf("Please enter a number you would like to search for (1-100)\nEnter -1 if you wish to terminate the program:");
                scanf("%d", &userInput);

        if(userInput==(-1)) //if -1, escape program
        {
                return 0;
        }

        while(userInput!=(-1))
        {
                find_number(arrayPtr, arraySize, userInput);
                printf("Please enter a number you would like to search for (1-100)\nEnter -1 if you wish to terminate the program:");
                scanf("%d", &userInput);
        }

        write_to_file(argv[1], arrayPtr, arraySize);
        if(userInput==(-1))
        {
        free(arrayPtr);
        return 0;
        }
return 0;
}

void print_array(int* array, int length)
{
        int i;
        for (i=0; i<length; i++)
        {
                printf("%d. %d\n", (i+1), array[i]);
        }
}

void bubble_sort(int length, int* array)
{
         int i, j, hold=0;
        for(i=1; i< length; i++) //pass through each element of the array
        {
                for(j=0; j<(length-1); j++) //go through the array beginning to end
                {
                        if (array[j]>array[j+1]) //if the value at the first first position is larger than the element at the second position, swap them
                        {
                                hold=array[j];
                                array[j]=array[j+1];
                                array[j+1]=hold;
                        }
                }
        }
}

void find_number(int* array, int length, int number)
{
        int i,print=0;
        for (i=0; i<length; i++)
        {
                if(array[i]==number)
                        {
                                printf("%d was found at location %d\n", number, (i+1));
                                print++;
                        }
        }
        if(print<=0)
        {
        printf("Not found! %d is not present in the list.\n", number);
        }
}

void write_to_file(char* filename, int* array, int length)
{
        FILE *file;
        if((file=fopen(filename, "w"))==NULL)
        {
                printf("Unable to write to file");
        }
        else{
                int i=0;
                        for(i=0; i<length; i++)
                        {
                                fprintf(file, "%d. %d\n", (i+1), array[i]);
                        }
        }
fclose(file);
}
